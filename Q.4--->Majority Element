//broute force approach

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count = 0 ;
        sort(nums.begin() , nums.end());
        for(int i = 0 ; i < nums.size() ; i++){
            count = 0;
            for(int j = 0 ; j < nums.size() ; j++){
                if(nums[i] == nums[j]){
                    count++;
                }
            }
            if(count>nums.size()/2){
                return nums[i];
            }
        }
        return -1;
        
    }
};



//optimam approach
class Solution {
public:
    int majorityElement(vector<int>& nums) {
     map<int ,int> m;
     for(auto num:nums){
         m[num]++;
     } 
     for(auto i:m){
         if(i.second>nums.size()/2)
         return i.first;
     }  
     return -1;
    }
};
